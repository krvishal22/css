/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/
$text-color-white : #fff;
$text-color-grey : #777;

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box; /* remove margin or padding from box */
}

html {
  font-size: 62.5%;
}

body {
  font-family: "Lato", sans-serif;
  line-height: 1.5;
  font-weight: 400;
  color: $text-color-grey;
  padding: 3rem;
}

.header {
  height: 95vh;
  background-image: linear-gradient(
      to right bottom,
      rgba(126, 213, 111, 0.8),
      rgba(40, 180, 131, 0.8)
    ),
    url(../img/hero.jpg);
  background-size: cover; /* try to fit the element */
  background-position: top; /* always stay on the top */
  position: relative;
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);

  &__logo-box {
    position: absolute;
    top: 4rem;
    left: 4rem;
  }

  &__logo {
    height: 3.5rem;
  }

  &__text-box {
    position: absolute;
    top: 40%;
    left: 50%;
    transform: translate(-50%, -50%);
    text-align: center;
  }
}

.heading-primary {
  color: $text-color-white;
  text-transform: uppercase;
  margin-bottom: 4rem;
  &--main {
    display: block;
    font-size: 6rem;
    font-weight: 40rem;
    letter-spacing: 3.5rem;
    animation-name: moveInLeft;
    animation-duration: 1.5s;
    /* animation-delay: 1s;
      animation-iteration-count: 3;
      animation-timing-function: ease-out; */
  }

  &--sub {
    display: block;
    font-size: 2rem;
    font-weight: 700;
    letter-spacing: 1.75rem;
    /* animation-name: moveInRight;
      animation-duration: 1.5s; */
    animation: moveInRight 1.5s ease-in; /* short hand */
  }
}

@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-10rem) rotate(-50deg);
  }
  80% {
    opacity: 0.8;
    transform: translateX(2rem);
  }
  100% {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(10rem);
  }
  80% {
    opacity: 0.8;
    transform: translateX(-2rem);
  }
  100% {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes moveInBottom {
  0% {
    opacity: 0;
    transform: translateY(3rem);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

.btn {
  &:link,
  &:visited {
    text-transform: uppercase;
    text-decoration: none;
    display: inline-block;
    border-radius: 10rem;
    transition: all 0.2s;
    position: relative;
  }

  &:hover {
    transform: translateY(-0.3rem);
    box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.4); /* x-axis y-axis blur color */

    &::after {
      transform: scale(1.5);
      opacity: 0;
    }
  }

  &:active {
    transform: translateY(-0.1rem);
    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.4); /* x-axis y-axis blur color */
  }

  &--white {
    background-color: $text-color-white;
    color: $text-color-grey;
    padding: 1.5rem 4rem;

    &::after {
      background-color: $text-color-white;
      transition: all 0.4s;
    }
  }

  &::after {
    content: "";
    display: inline-block;
    height: 100%;
    width: 100%;
    border-radius: 10rem;
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
  }

  &--animated {
    animation: moveInBottom 0.5s ease-out 0.75s; /* last value is the delay */
    /* as we can see we have a delay so we want button to start displaying only after animation started */
    animation-fill-mode: backwards; /* values applied by the animation outside the time it is executing. */
  }
}
